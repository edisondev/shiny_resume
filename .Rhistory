library(rJava)
library(ggmap)
library(ggvis)
library(sp)
library(mapview)
#simple dataset
long <- c(-53.53167, -53.53167, -53.68000, -53.64667, -53.68500)
lat <- c(47.16833, 47.18500, 47.01167, 47.00500, 47.98833)
year <- c(1995:1999)
count <- rpois(5, 20)
# convert to SpatialPointsDataFrame
data1 <- as.data.frame(cbind(year, count, lat, long))
proj4string(data1) <- CRS("+init=epsg:4326")
# view it
mapview(data1)
?mapview
# convert to SpatialPointsDataFrame
data1 <- as.data.frame(cbind(year, count, lat, long))
proj4string(data1) <- CRS("+init=epsg:4326")
# view it
mapview(data1)
?proj4string
data1
proj4string(data1) <- CRS("+init=epsg:4326")
library(sp)
library(raster)
m1 <- mapView(poppendorf[[5]])
### point vector data ###
m2 <- mapView(breweries91)
### add two mapview objects
m1 + m2 # final zoom level based on m2
(m2, m1) # final zoom level based on m
breweries91
mydf <- structure(list(longitude = c(128.6979, 153.0046, 104.3261, 124.9019,
126.7328, 153.2439, 142.8673, 152.689), latitude = c(-7.4197,
-4.7089, -6.7541, 4.7817, 2.1643, -5.65, 23.3882, -5.571)), .Names = c("longitude",
"latitude"), class = "data.frame", row.names = c(NA, -8L))
### Get long and lat from your data.frame. Make sure that the order is in lon/lat.
xy <- mydf[,c(1,2)]
xy
map=get_map(location = c(-170,-50,170,80),
source="stamen",
zoom=2,
maptype="watercolor")
save(map, file="~map.rda")
load(file="~map.rda")
#Make Red dot for each university
uow=c(lat=-34.405404, lon=150.87843)
ubc=c(lat=49.93988, lon=-119.39557)
uoa=c(lat=53.52322, lon=-113.52632)
edu_df=data.frame(Longitude=c(150.87843,-119.39557,-113.52632),
Latitude=c(-34.405404,49.93988,53.52322),
tcx=c(150,-130,-113.52632),
tcy=c(-20,40,65),
name=c("University of Wollongong, \n Mech. Eng. Study Abroad, 2009",
"University of British Columbia\n Mech. Eng., M.A.Sc., 2013",
"University of Alberta\nMech. Eng. B.Sc, 2010"),
alignment=c(1,0,0),
year=c(2009, 2010, 2013),
degree=c("Study Abroad","B.Sc.", "M.A.Sc."))
#Static Map
ggmap(map)+
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank())+
geom_point(aes(x=Longitude, y=Latitude), data=edu_df,
alpha=0.75, color="red",size=4)+
annotate('text',x=edu_df$tcx,
y=edu_df$tcy,
label=edu_df$name,
hjust=edu_df$alignment,
fontface="bold")
edu_df
SpatialPointsDataFrame(edu_df)
SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edu_df)
esdf=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edu_df)
mapview(esdf)
esdf=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edu_df,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
mapview(esdf)
edf$Institution=edu_df$name
edf$Degree = edu_df$degree
edf$Graduating Year=edu_df$year
edf$Institution=edu_df$name
edf=data.frame
edf$Institution=edu_df$name
edf=data.frame()
edf$Institution=edu_df$name
edf=data.frame(Institution=character(),
stringsAsFactors = FALSE)
edf$Institution=edu_df$name
edf=edu_df$name
edf$Degree = edu_df$degree
edf=data.frame(Institution=character(),
Degree=numeric(),
GraduatingYear=numeric(),
stringsAsFactors = FALSE)
edf$Institution=edu_df$name
edf$Degree = edu_df$degree
edf$GraduatingYear=edu_df$year
esdf=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edu_df,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
mapview(esdf)
#Dynamic Map
edf=data.frame(Institution=character(3),
Degree=numeric(),
GraduatingYear=numeric(),
stringsAsFactors = FALSE)
edf=data.frame(Institution=character(3),
Degree=numeric(3),
GraduatingYear=numeric(3),
stringsAsFactors = FALSE)
edf$Institution=edu_df$name
edf$Degree = edu_df$degree
num_entries=3
edf=data.frame(Institution=character(num_entries),
Degree=numeric(num_entries),
GraduatingYear=numeric(num_entries),
stringsAsFactors = FALSE)
edf$Institution=edu_df$name
edf$Degree = edu_df$degree
edf$GraduatingYear=edu_df$year
esdf=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edf,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
mapview(esdf)
edu_df=data.frame(Longitude=c(150.87843,-119.39557,-113.52632),
Latitude=c(-34.405404,49.93988,53.52322),
tcx=c(150,-130,-113.52632),
tcy=c(-20,40,65),
name=c("University of Wollongong, \n Mech. Eng. Study Abroad, 2009",
"University of British Columbia\n Mech. Eng., M.A.Sc., 2013",
"University of Alberta\nMech. Eng. B.Sc, 2010"),
uniName=c("University of Wollongong",
"University of British Columbia",
"University of Alberta"),
alignment=c(1,0,0),
year=c(2009, 2010, 2013),
degree=c("Bacherlor of Science, Study Abroad","Bachelor of Science in Mechanical Engineering", "Master of Applied Science in Mechanical Engineering"))
#Static Map
ggmap(map)+
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank())+
geom_point(aes(x=Longitude, y=Latitude), data=edu_df,
alpha=0.75, color="red",size=4)+
annotate('text',x=edu_df$tcx,
y=edu_df$tcy,
label=edu_df$name,
hjust=edu_df$alignment,
fontface="bold")
#Dynamic Map
num_entries=3
edf=data.frame(Institution=character(num_entries),
Degree=numeric(num_entries),
GraduatingYear=numeric(num_entries),
stringsAsFactors = FALSE)
edf$Institution=edu_df$uniName
edf$Degree = edu_df$degree
edf$GraduatingYear=edu_df$year
esdf=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edf,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
mapview(esdf)
Education=SpatialPointsDataFrame(coords=edu_df[, c(1,2)],data= edf,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
mapview(Education)
?mapview
shiny::runApp()
runApp()
runApp()
p=mapview(Education)
runApp()
